name: Deploy Django to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            # Navigate to service directory
            cd /root/service || { echo "Service directory not found, creating..."; mkdir -p /root && cd /root; }
            
            # Clone or pull repository
            if [ -d /root/service/.git ]; then
              echo "Pulling latest changes..."
              cd /root/service
              git pull origin main
            else
              echo "Cloning repository..."
              cd /root
              git clone https://github.com/ozodbekAI/service.git
              cd service
            fi
            
            # Install system dependencies
            sudo apt-get update
            sudo apt-get install -y python3-pip python3-venv python3-dev libpq-dev
            
            # Create and activate virtual environment
            if [ ! -d venv ]; then
              python3 -m venv venv
            fi
            source venv/bin/activate
            
            # Install Python dependencies
            pip install --upgrade pip
            pip install -r requirements.txt
            
            # Run Django migrations
            python manage.py migrate
            
            # Collect static files
            python manage.py collectstatic --noinput
            
            # Install gunicorn if not installed
            pip install gunicorn
            
            # Kill existing gunicorn processes
            pkill -f gunicorn || echo "No existing gunicorn processes"
            
            # Start gunicorn in background
            nohup gunicorn --bind 0.0.0.0:8000 config.wsgi:application > /dev/null 2>&1 &
            
            echo "Deployment completed successfully!"
            echo "Application is running on port 8000"