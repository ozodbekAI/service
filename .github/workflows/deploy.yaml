apiVersion: batch/v1
kind: Job
metadata:
  name: django-deploy-job
spec:
  template:
    spec:
      containers:
      - name: django-deploy
        image: python:3.10-slim
        command:
          - /bin/bash
          - -c
          - |
            set -e
            # Update package lists and install dependencies
            if command -v apt-get > /dev/null 2>&1; then
              apt-get update
              apt-get install -y python3-pip python3-venv python3-dev libpq-dev git
            elif command -v yum > /dev/null 2>&1; then
              yum update -y
              yum install -y python3-pip python3-devel postgresql-devel git
            else
              echo "Neither apt-get nor yum found. Install dependencies manually."
              exit 1
            fi

            # Create and activate virtual environment
            if [ ! -d venv ]; then
              python3 -m venv venv
            fi
            source venv/bin/activate

            # Upgrade pip and install dependencies
            pip install --upgrade pip
            pip install -r requirements.txt || (pip install psycopg2-binary && pip install -r requirements.txt --no-deps)

            # Run migrations and collect static files
            python manage.py migrate
            python manage.py collectstatic --noinput

            # Install gunicorn and restart if running
            pip install gunicorn
            pkill -f gunicorn || echo "No existing gunicorn processes"

            # Start gunicorn in background, redirect logs to a file for debugging
            nohup gunicorn --bind 0.0.0.0:8000 config.wsgi:application > gunicorn.log 2>&1 &

            echo "Deployment completed successfully!"
            echo "Application is running on port 8000"
        volumeMounts:
          - name: app-code
            mountPath: /app
        workingDir: /app
      restartPolicy: Never
      volumes:
        - name: app-code
          gitRepo:
            repository: 'https://github.com/ozodbekAI/service.git'
            revision: 'main'
  backoffLimit: 1
